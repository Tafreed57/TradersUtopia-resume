version: 1
frontend:
  phases:
    preBuild:
      commands:
        - nvm use 20
        - corepack enable
        # Install dependencies
        - pnpm i
    build:
      commands:
        - echo "Building for production..."
        # Debug: Check critical environment variables at BUILD TIME
        - echo "üîç BUILD-TIME Environment Variables Check"
        - 'echo "DATABASE_URL is set: $(if [ -n "$DATABASE_URL" ]; then echo "‚úÖ YES"; else echo "‚ùå NO"; fi)"'
        - 'echo "DATABASE_URL starts with: $(echo $DATABASE_URL | cut -c1-30)..." || echo "‚ùå DATABASE_URL not accessible"'
        - 'echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY is set: $(if [ -n "$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY" ]; then echo "‚úÖ YES"; else echo "‚ùå NO"; fi)"'
        - 'echo "CLERK_SECRET_KEY is set: $(if [ -n "$CLERK_SECRET_KEY" ]; then echo "‚úÖ YES"; else echo "‚ùå NO"; fi)"'
        - 'echo "STRIPE_SECRET_KEY is set: $(if [ -n "$STRIPE_API_KEY" ]; then echo "‚úÖ YES"; else echo "‚ùå NO"; fi)"'
        # List all environment variables starting with DATABASE, CLERK, STRIPE for debugging
        - echo "üîç All DATABASE/CLERK/STRIPE related environment variables:"
        - env | grep -E "(DATABASE|CLERK|STRIPE)" || echo "‚ùå No DATABASE/CLERK/STRIPE env vars found"
        # Generate Prisma client with database check
        - echo "üîß Generating Prisma client..."
        - npx prisma generate
        # Verify database connection during build
        - echo "üîç Testing database connection during build..."
        - 'node -e "console.log(\"DATABASE_URL during build:\", process.env.DATABASE_URL ? \"‚úÖ AVAILABLE\" : \"‚ùå MISSING\")"'
        # Verify critical environment variables are set
        - echo "‚úÖ Environment variables verified"
        - pnpm build
    postBuild:
      commands:
        # Final verification after build
        - echo "üîç POST-BUILD Environment Variables Check"
        - 'echo "DATABASE_URL available after build: $(if [ -n "$DATABASE_URL" ]; then echo "‚úÖ YES"; else echo "‚ùå NO"; fi)"'
        - echo "Build completed successfully"
  artifacts:
    # For Next.js SSR apps, use .next directory
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
