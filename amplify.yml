version: 1
frontend:
  phases:
    preBuild:
      commands:
        - nvm use 20
        - corepack enable
        # Optimize Node.js memory settings
        - export NODE_OPTIONS="--max-old-space-size=4096 --max-semi-space-size=512"
        # Clear any existing cache to free up memory
        - rm -rf node_modules/.cache || true
        - rm -rf .next || true
        - rm -rf .turbo || true
        # Configure pnpm for optimal performance
        - pnpm config set store-dir /tmp/pnpm-store
        - pnpm config set node-linker hoisted
        - pnpm config set shamefully-hoist true
    build:
      commands:
        - echo "Building for production with pnpm..."
        # Set memory-efficient environment variables
        - export NODE_OPTIONS="--max-old-space-size=14000"
        - export NEXT_TELEMETRY_DISABLED=1
        # Create optimized .env.production
        - echo "DATABASE_URL=$DATABASE_URL" > .env.production
        - echo "STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY" >> .env.production
        - echo "CLERK_SECRET_KEY=$CLERK_SECRET_KEY" >> .env.production
        - echo "STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET" >> .env.production
        # Build with pnpm
        - pnpm build
  artifacts:
    # For Next.js SSR apps, use .next directory
    baseDirectory: .next
    files:
      - '**/*'
    # Exclude heavy files to reduce artifact size
    exclude:
      - node_modules/**/*
      - .git/**/*
      - '*.log'
      - docs/**/*
      - '.env*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - /tmp/pnpm-store/**/*
